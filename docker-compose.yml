version: "3"


# to restore a dump from folder
# docker-compose exec -T mongo mongorestore /dump
services:
  base:
    build:
      context: .
      target: build
    scale: 0

  youtube-mock:
    image: mockserver/mockserver:latest
    hostname: youtube
    ports:
      - 1080:1080
      - 80:1080
      - 443:1080
    environment:
      MOCKSERVER_WATCH_INITIALIZATION_JSON: "true"
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json
    volumes:
      - type: bind
        source: ./backend/config/mockserver
        target: /config
    command: -logLevel DEBUG -serverPort 1080
    networks:
      youtube:
        aliases:
          - www.youtube.com

  mongodb:
    image: mongo:4.2
    ports:
      - "27017:27017"
    volumes:
      - ./backend/dump:/dump/
    restart: unless-stopped
    networks:
      - youtube

  # provide a test for testing purposo on a specific port
  mongodb-test:
    image: mongo:4.2
    ports:
      - "27019:27017"
    restart: unless-stopped


  mongo-indexes:
    image: mongo:4.2
    container_name: mongo-indexes
    volumes:
      - ./backend/scripts:/scripts
    command: mongo mongodb:27017/yttrex /scripts/build-indexes.js
    depends_on:
      - mongodb

  mongo-test-indexes:
    image: mongo:4.2
    container_name: mongo-test-indexes
    volumes:
      - ./backend/scripts:/scripts
    command: mongo mongodb-test:27017/test /scripts/build-indexes.js
    depends_on:
      - mongodb-test

  api:
    image: yttrex_base
    container_name: api
    ports:
      - "9000:9000"
    environment:
      DEBUG: "*,-body-parser*,-express*,-follow-redirects"
      key: my-dev-key
      mongoHost: mongodb
      mongodb: yttrex
    volumes:
      - ./shared:/app/shared
      - ./backend:/app/backend/
    links:
      - mongodb
    depends_on:
      - youtube-mock
      - mongodb
    working_dir: /app/backend
    command: npm run watch
    restart: always
    networks:
      - youtube

  ycai:
    image: yttrex_base
    environment:
      - NODE_ENV=development
    volumes:
      - ./tsconfig.json:/app/tsconfig.json
      - ./shared:/app/shared
      - ./YCAI:/app/YCAI
      - ./YCAI/build:/app/YCAI/build
    working_dir: /app/YCAI
    depends_on:
      - api
    command: sh -c "chmod -R 777 /app/YCAI/build && npm run watch"

networks:
  youtube: